pipeline {
    agent any
    environment {
		PROJECT = "lk-ui"
	}
    parameters {
        gitParameter(name: 'REVISION',
                     description: 'Branch or tag',
                     type: 'PT_BRANCH_TAG',
                     defaultValue: 'master',
                     useRepository: 'git@bitbucket.org:playlabirint/lk-ui.git',
                     sortMode: 'DESCENDING_SMART',
                     selectedValue: 'DEFAULT',
                     quickFilterEnabled: true)
    }
    stages {
        stage('Build docker') {
            steps {
                sshagent(credentials: ['jenkins.ci']) {
                    bitbucketStatusNotify(buildState: 'INPROGRESS')
					sh "docker build --ssh default -t ${PROJECT}:build -f deploy/Dockerfile ."
					sh "docker create -ti --name ${PROJECT} ${PROJECT}:build bash"
                }
            }
        }
        stage('Copy dist') {
            steps {
                sshagent(credentials: ['thesimscc']) {
                    sh "rm -rf ${WORKSPACE}/dist"
                    sh "docker cp ${PROJECT}:/dist ${WORKSPACE}"
					sh "ssh -o StrictHostKeyChecking=no root@82.146.51.146 \"mkdir -p /var/www/${PROJECT} && mv /var/www/${PROJECT} /var/www/${PROJECT}_bkp\""
					sh "scp -r ${WORKSPACE}/dist root@82.146.51.146:/var/www/${PROJECT}"
                    sh "ssh -o StrictHostKeyChecking=no root@82.146.51.146 \"rm -rf /var/www/${PROJECT}_bkp\""
                    bitbucketStatusNotify(buildState: 'SUCCESSFUL')
                }
            }
        }
    }
    post {
    	unsuccessful {
			sshagent(credentials: ['thesimscc']) {
                bitbucketStatusNotify(buildState: 'FAILED')
				sh "ssh -o StrictHostKeyChecking=no root@82.146.51.146 \"[ ! -d \"/var/www/${PROJECT}\" ] && mkdir -p /var/www/${PROJECT}_bkp && mv /var/www/${PROJECT}_bkp /var/www/${PROJECT}\""
			}
		}
        always {
            sh 'docker stop ${PROJECT}'
            sh 'docker rm ${PROJECT}'
            sh 'docker rmi ${PROJECT}:build'
        }
    }
}
